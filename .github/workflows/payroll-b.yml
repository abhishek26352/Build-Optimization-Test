name: Workflow B

on:
  # workflow_run:
  #   workflows: ["Workflow A"]
  #   types:
  #     - completed
  workflow_dispatch:
    

jobs:  
  run_on_workflow_a_success:
    permissions:
      contents: "read"
      id-token: "write"
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: windows-latest
    steps:
      - name: Run on workflow A success
        run: echo "Workflow A completes successfully"

      - name: 'Set RUN_ID'
        uses: actions/github-script@v6
        with:
          script: |
            let workflowARunId = context.payload.workflow_run.id;
            console.log("Workflow A run_id = " + workflowARunId);
            core.exportVariable("WORKFLOW_A_RUN_ID", workflowARunId);


      # - name: 'Download artifact'
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
      #          owner: context.repo.owner,
      #          repo: context.repo.repo,
      #          run_id: context.payload.workflow_run.id,
      #       });

      #       console.log("run_id = " + context.payload.workflow_run.id);
      #       core.exportVariable("RUN_ID", context.payload.workflow_run.id);
            
      #       let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
      #         return artifact.name == "context.json"
      #       })[0];
            
      #       let download = await github.rest.actions.downloadArtifact({
      #          owner: context.repo.owner,
      #          repo: context.repo.repo,
      #          artifact_id: matchArtifact.id,
      #          archive_format: 'zip',
      #       });
            
      #       let fs = require('fs');
      #       fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/context.zip`, Buffer.from(download.data));
            
      # - name: 'Unzip artifact'
      #   run: unzip context.zip

      # - name: 'Return Parsed JSON'
      #   uses: actions/github-script@v6
      #   id: return-parsed-json
      #   with:
      #     script: |
      #       let fs = require('fs');
      #       let data = fs.readFileSync('./context.json');
      #       return JSON.parse(data);

      # - name: Print run-id
      #   run: |
      #     echo "RUN_ID=${{fromJSON(steps.return-parsed-json.outputs.result).payroll-run-id}}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8
      
      - name: Download payroll DLLs from artifact
        uses: actions/download-artifact@v4
        with:
          name: payroll-dlls
          path: "${{ github.workspace }}"
          github-token: ${{ github.token }}
          repository: ${{ github.repository }}
          run-id: ${{ env.WORKFLOW_A_RUN_ID }}

      - name: display folder
        run: dir
    
    # outputs:
      # property_one: ${{fromJSON(steps.return-parsed-json.outputs.result).payroll-run-id}}
